{
  "id": "booktravel",
  "version": "1.0",
  "name": "Travel Booking Saga Example",
  "events": [
    {
      "name": "flightBookedEvent",
      "type": "FlightBooked",
      "source": "reservationSystem"
    },
    {
      "name": "flightBookingFailedEvent",
      "type": "FlightBookingFailed",
      "source": "reservationSystem"
    },
    {
      "name": "autoBookedEvent",
      "type": "AutoBooked",
      "source": "reservationSystem"
    },
    {
      "name": "autoBookingFailedEvent",
      "type": "AutoBookingFailed",
      "source": "reservationSystem"
    },
    {
      "name": "hotelBookedEvent",
      "type": "HotelBooked",
      "source": "reservationSystem"
    },
    {
      "name": "hotelBookingFailedEvent",
      "type": "HotelBookingFailed",
      "source": "reservationSystem"
    }
  ],
  "functions": [
    {
      "name": "callFlightReservationMicroservice",
      "operation": "file://reservations.org/flight.json#makeReservation"
    },
    {
      "name": "callFlightReservationUndoMicroservice",
      "operation": "file://reservations.org/flight.json#undoReservation"
    },
    {
      "name": "callHotelReservationMicroservice",
      "operation": "file://reservations.org/hotel.json#makeReservation"
    },
    {
      "name": "callAutoReservationMicroservice",
      "operation": "file://reservations.org/auto.json#makeReservation"
    },
    {
      "name": "reportErrors",
      "operation": "file://errors.org#log.json"
    }
  ],
  "states": [
    {
      "name": "BookFlight",
      "start": true,
      "type": "operation",
      "actionMode": "sequential",
      "actions": [
        {
          "functionRef": {
            "refName": "callFlightReservationMicroservice",
            "arguments": {
              "flight": "${ .flightDetails }"
            }
          }
        }
      ],
      "compensatedBy": "UndoFlightReservation",
      "transition": "WaitForReservationResults"
    },
    {
      "name": "BookAutoAndHotel",
      "type": "parallel",
      "completionType": "and",
      "branches": [
        {
          "name": "BookHotel",
          "actions": [
            {
              "functionRef": {
                "refName": "callHotelReservationMicroservice",
                "arguments": {
                  "hotel": "${ .hotelDetails }",
                  "flight": "${ .bookedFlight }"
                }
              }
            }
          ]
        },
        {
          "name": "BookAuto",
          "actions": [
            {
              "functionRef": {
                "refName": "callAutoReservationMicroservice",
                "arguments": {
                  "auto": "${ .autoDetails }",
                  "flight": "${ .bookedFlight }"
                }
              }
            }
          ]
        }
      ],
      "transition": "WaitForReservationResults"
    },
    {
      "name": "UndoFlightReservation",
      "type": "operation",
      "actionMode": "sequential",
      "actions": [
        {
          "functionRef": {
            "refName": "callFlightReservationUndoMicroservice",
            "arguments": {
              "flight": "${ .bookedFlight }"
            }
          }
        }
      ],
      "usedForCompensation": true
    },
    {
      "name": "WaitForReservationResults",
      "type": "switch",
      "eventTimeout": "PT1H",
      "eventConditions": [
        {
          "eventRefs": [ "flightBookedEvent" ],
          "transition": "BookAutoAndHotel",
          "eventDataFilter": {
            "dataOutputPath": "${ .data }"
          }
        },
        {
          "eventRefs": [ "autoBookedEvent", "hotelBookedEvent" ],
          "exclusive": false, // requires all events
          "transition": "Done",
          "eventDataFilter": {
            "dataOutputPath": "${ .data }"
          }
        },
        {
          "eventRefs": [ "flightBookingFailedEvent", "autoBookingFailedEvent", "hotelBookingFailedEvent" ],
          "exclusive": true, // requires one event
          "transition": "ReportError",
          "eventDataFilter": {
            "dataOutputPath": "${ .data }"
          }
        }
      ],
      "default": {
        "transition": "Done"
      }
    },
    {
      "name": "ReportError",
      "type": "operation",
      "actionMode": "sequential",
      "actions": [
        {
          "functionRef": {
            "refName": "reportErrors",
            "arguments": {
              "error": "${ .error }"
            }
          }
        }
      ],
      "transition": {
        "compensate": true,
        "nextState": "Done"
      }
    },
    {
      "name": "Done",
      "type": "operation",
      "actions": [],
      "end": true
    }
  ]
}